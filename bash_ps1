# vim: set filetype=sh:
# Fill with minuses
# (this is recalculated every time the prompt is shown in function prompt_command):
reset_style='\[\033[00m\]'
yellow=$reset_style'\[\033[0;33m\]'
bold_yellow=$reset_style'\[\033[1;33m\]'
bold_white=$reset_style'\[\033[1;29m\]'

# Prompt variable:

PS1="$bold_yellow"'${directoryindicator}${jobindicator}'"$yellow"'${fill} \d · \t\n'"$bold_white"

# Reset color for command output
# (this one is invoked every time before a command is executed):
trap 'echo -ne "\033[00m"' DEBUG

#Put a red X after interrupted commands
trap 'echo -ne "\033[1;31m✕\033[00m"' INT

function prompt_command {

   let fillsize=$(( ${COLUMNS}-23 ))

#########################
#  Directory indicator  #
#########################

   directoryindicator=$(pwd | sed "s,$HOME,~," )

   if [[ $HOME2 ]]; then
      directoryindicator=$( echo $directoryindicator | sed "s,$HOME2,♥," )
   fi

   directoryindicator+=" "
   jobn=`jobs | wc -l | sed 's/^ *//'`

   let fillsize=$(( ${fillsize}-${#directoryindicator}))

##############################
#  Background job indicator  #
##############################

   if [ "$jobn" -gt "0" ]; then
      jobindicator="[$jobn] "
   else
      jobindicator=""
   fi

   let fillsize=$(( ${fillsize}-${#jobindicator}))

###############################
#  Fill with continuous dash  #
###############################

   fill=""
   while [ "$fillsize" -gt "0" ]
   do
      fill="―${fill}"
      let fillsize=$((${fillsize}-1))
   done

}
PROMPT_COMMAND=prompt_command
